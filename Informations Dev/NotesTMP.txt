Le code final doit être englobé entre <div class="margbottom1"> </div>

##########################
Rappels CSS / JavaScript :
##########################
Merci le déboguer JavaScript de Firefox Developer.

Objectif : Paramétrer les tailles sur des critères standards. <<<<<<<<<<<<



#############
Rappels PHP :
#############
echo "\r\r"; fonctionnel
echo '\r\r'; ne fonctionne pas

operation ternaire
?"O":"N";

Pour connaitre le contenu de l’objet $fluxrss : echo ('var_dump($fluxrss)');


####################
Evolution possible :
####################
Soucis d'encodage multiples et d'accents dans le fichier .xml
En fait, avec le addslashes, le soucis est résolu. Je pensais qu'il y avait un problèmes, mais le code iso d'accentuation prend le relais.
Il faudra voir lors de la migration d'encodage, mais de mon côté client test, ISO tant UTF-8 est affiché.


/* IMPORTANT */
/* Permet d'ajouter la date de création de l'annonce, mais, certaines dates sont de 1970 sur le fichier actuel rss_48.xml */
/* La fonction date prend en paramètre un format et un timestamp. La fonction strtotime convertit la date pudDate en timestamp. */
/* echo('<i>publié le'.(string)date('d/m/Y à G\hi',strtotime($item->pubDate)).'</i>'); echo('<br/>'); */


Utiliser plutot que foreach : ($array as $key => $value) {


Complément pour SimpleXML
Le controle sur les string à la place des empty. Ne fonctionne pas. Inutile car le flux n'est de toute façon pas vide.
Test pour connaître l'existance du fichier, si chaine de caractère, la longueur.
	echo isset($fluxrss->channel->title)?"O":"N"; /* Affiche Oui */
	echo is_string($fluxrss->channel->title)?"O":"N"; /* Affiche Non */
	echo is_string($fluxrss->channel->title[0])?"O":"N"; /* Affiche Non */
	echo strlen($fluxrss->channel->title)>=4?"O":"N";
	
	var_dump($fluxrss->channel->title);
	echo $fluxrss->channel->title[0];